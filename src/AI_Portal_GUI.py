#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.13
# In conjunction with Tcl version 8.6
#    May 31, 2018 04:40:07 PM

import sys

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import AI_Portal_GUI_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    AI_Portal_GUI_support.set_Tk_var()
    top = New_Toplevel (root)
    AI_Portal_GUI_support.init(root, top)
    root.mainloop()

w = None
def create_New_Toplevel(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    AI_Portal_GUI_support.set_Tk_var()
    top = New_Toplevel (w)
    AI_Portal_GUI_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_New_Toplevel():
    global w
    w.destroy()
    w = None


class New_Toplevel:
    def __init__(self, top=None):
        #spacing variables
        leftMargin = 0.015
        topMargin = 0.08
        labelHeight = 31
        labelWidth = 76



        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("1333x826+415+167")
        top.title("New Toplevel")
        top.configure(background="#d9d9d9")

        #self.root = Tk()

        self.menubar = Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)



        self.style.configure('TNotebook.Tab', background=_bgcolor)
        self.style.configure('TNotebook.Tab', foreground=_fgcolor)
        self.style.map('TNotebook.Tab', background=
            [('selected', _compcolor), ('active',_ana2color)])
        self.TNotebook1 = ttk.Notebook(top)
        self.TNotebook1.place(relx=0.03, rely=0.04, relheight=0.92
                , relwidth=0.94)
        self.TNotebook1.configure(width=1254)
        self.TNotebook1.configure(takefocus="")
        self.Study_tab = Frame(self.TNotebook1)
        self.TNotebook1.add(self.Study_tab, padding=3)
        self.TNotebook1.tab(0, text="Study Criteria", compound="left"
                ,underline="-1", )
        self.Study_tab.configure(background="#d9d9d9")
        self.Study_tab.configure(highlightbackground="#d9d9d9")
        self.Study_tab.configure(highlightcolor="black")
        self.Diagnosis_tab = Frame(self.TNotebook1)
        self.TNotebook1.add(self.Diagnosis_tab, padding=3)
        self.TNotebook1.tab(1, text="Diagnosis and Results Criteria"
                ,compound="left", underline="-1", )
        self.Diagnosis_tab.configure(background="#d9d9d9")
        self.Diagnosis_tab.configure(highlightbackground="#d9d9d9")
        self.Diagnosis_tab.configure(highlightcolor="black")
        self.Patient_tab = Frame(self.TNotebook1)
        self.TNotebook1.add(self.Patient_tab, padding=3)
        self.TNotebook1.tab(2, text="Patient Criteria", compound="none"
                ,underline="-1", )
        self.Patient_tab.configure(background="#d9d9d9")
        self.Patient_tab.configure(highlightbackground="#d9d9d9")
        self.Patient_tab.configure(highlightcolor="black")
        self.Dataset_tab = Frame(self.TNotebook1)
        self.TNotebook1.add(self.Dataset_tab, padding=3)
        self.TNotebook1.tab(3, text="Data Set Options", compound="none"
                ,underline="-1", )
        self.Dataset_tab.configure(background="#d9d9d9")
        self.Dataset_tab.configure(highlightbackground="#d9d9d9")
        self.Dataset_tab.configure(highlightcolor="black")
        self.Download_tab = Frame(self.TNotebook1)
        self.TNotebook1.add(self.Download_tab, padding=3)
        self.TNotebook1.tab(4, text="Download Options", compound="none"
                ,underline="-1", )
        self.Download_tab.configure(background="#d9d9d9")
        self.Download_tab.configure(highlightbackground="#d9d9d9")
        self.Download_tab.configure(highlightcolor="black")

        self.Label2 = Label(self.Study_tab, anchor='w')
        self.Label2.place(relx=leftMargin, rely=topMargin, height=labelHeight, width=labelWidth)
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(text='''Modality''')

        self.Label2_1 = Label(self.Study_tab, anchor='w')
        self.Label2_1.place(relx=leftMargin, rely=0.14, height=labelHeight, width=labelWidth)
        self.Label2_1.configure(activebackground="#f9f9f9")
        self.Label2_1.configure(activeforeground="black")
        self.Label2_1.configure(background="#d9d9d9")
        self.Label2_1.configure(disabledforeground="#a3a3a3")
        self.Label2_1.configure(foreground="#000000")
        self.Label2_1.configure(highlightbackground="#d9d9d9")
        self.Label2_1.configure(highlightcolor="black")
        self.Label2_1.configure(justify=LEFT)
        self.Label2_1.configure(text='''Date Range''')
        self.Label2_1.configure(width=96)

        self.Label2_2 = Label(self.Study_tab, anchor='w')
        self.Label2_2.place(relx=leftMargin, rely=0.19, height=31, width=146)
        self.Label2_2.configure(activebackground="#f9f9f9")
        self.Label2_2.configure(activeforeground="black")
        self.Label2_2.configure(background="#d9d9d9")
        self.Label2_2.configure(disabledforeground="#a3a3a3")
        self.Label2_2.configure(foreground="#000000")
        self.Label2_2.configure(highlightbackground="#d9d9d9")
        self.Label2_2.configure(highlightcolor="black")
        self.Label2_2.configure(justify=LEFT)
        self.Label2_2.configure(text='''Procedure Search''')
        self.Label2_2.configure(width=146)

        self.Study_box = ttk.Combobox(self.Study_tab)
        self.Study_box.place(relx=0.17, rely=0.08, relheight=0.04
                , relwidth=0.37)
        self.Study_box.configure(textvariable=AI_Portal_GUI_support.combobox)
        self.Study_box.configure(width=462)
        self.Study_box.configure(takefocus="")
        
        #v_m = (self.root.register(self.validate_month),'%S')

        self.Spinbox1_month1 = Spinbox(self.Study_tab, from_=1, to=12)
        self.Spinbox1_month1.place(relx=0.17, rely=0.14, relheight=0.04, relwidth=0.03)
        self.Spinbox1_month1.configure(activebackground="#f9f9f9")
        self.Spinbox1_month1.configure(background="white")
        self.Spinbox1_month1.configure(buttonbackground="#d9d9d9")
        self.Spinbox1_month1.configure(disabledforeground="#a3a3a3")
        self.Spinbox1_month1.configure(foreground="black")
        #self.Spinbox1_month1.configure(from_="1.0")
        self.Spinbox1_month1.configure(highlightbackground="black")
        self.Spinbox1_month1.configure(highlightcolor="black")
        self.Spinbox1_month1.configure(insertbackground="black")
        self.Spinbox1_month1.configure(selectbackground="#c4c4c4")
        self.Spinbox1_month1.configure(selectforeground="black")
        self.Spinbox1_month1.configure(textvariable=AI_Portal_GUI_support.spinbox)
        #self.Spinbox1_month1.configure(to="100.0")
        self.Spinbox1_month1.configure(width=38)

        self.Spinbox1_day1 = Spinbox(self.Study_tab, from_=1, to=31)
        self.Spinbox1_day1.place(relx=0.22, rely=0.14, relheight=0.04
                , relwidth=0.03)
        self.Spinbox1_day1.configure(activebackground="#f9f9f9")
        self.Spinbox1_day1.configure(background="white")
        self.Spinbox1_day1.configure(buttonbackground="#d9d9d9")
        self.Spinbox1_day1.configure(disabledforeground="#a3a3a3")
        self.Spinbox1_day1.configure(foreground="black")
        #self.Spinbox1_day1.configure(from_="1.0")
        self.Spinbox1_day1.configure(highlightbackground="black")
        self.Spinbox1_day1.configure(highlightcolor="black")
        self.Spinbox1_day1.configure(insertbackground="black")
        self.Spinbox1_day1.configure(selectbackground="#c4c4c4")
        self.Spinbox1_day1.configure(selectforeground="black")
        self.Spinbox1_day1.configure(textvariable=AI_Portal_GUI_support.spinbox2)
        #self.Spinbox1_day1.configure(to="100.0")

        self.Spinbox1_year1 = Spinbox(self.Study_tab, from_=1900, to=2020)
        self.Spinbox1_year1.place(relx=0.26, rely=0.14, relheight=0.04
                , relwidth=0.06)
        self.Spinbox1_year1.configure(activebackground="#f9f9f9")
        self.Spinbox1_year1.configure(background="white")
        self.Spinbox1_year1.configure(buttonbackground="#d9d9d9")
        self.Spinbox1_year1.configure(disabledforeground="#a3a3a3")
        self.Spinbox1_year1.configure(foreground="black")
        #self.Spinbox1_year1.configure(from_="1.0")
        self.Spinbox1_year1.configure(highlightbackground="black")
        self.Spinbox1_year1.configure(highlightcolor="black")
        self.Spinbox1_year1.configure(insertbackground="black")
        self.Spinbox1_year1.configure(selectbackground="#c4c4c4")
        self.Spinbox1_year1.configure(selectforeground="black")
        self.Spinbox1_year1.configure(textvariable=AI_Portal_GUI_support.spinbox3)
        #self.Spinbox1_year1.configure(to="100.0")
        self.Spinbox1_year1.configure(width=78)

        self.Spinbox1_day2 = Spinbox(self.Study_tab, from_=1, to=31)
        self.Spinbox1_day2.place(relx=0.38, rely=0.14, relheight=0.04
                , relwidth=0.03)
        self.Spinbox1_day2.configure(activebackground="#f9f9f9")
        self.Spinbox1_day2.configure(background="white")
        self.Spinbox1_day2.configure(buttonbackground="#d9d9d9")
        self.Spinbox1_day2.configure(disabledforeground="#a3a3a3")
        self.Spinbox1_day2.configure(foreground="black")
        #self.Spinbox1_day2.configure(from_="1.0")
        self.Spinbox1_day2.configure(highlightbackground="black")
        self.Spinbox1_day2.configure(highlightcolor="black")
        self.Spinbox1_day2.configure(insertbackground="black")
        self.Spinbox1_day2.configure(selectbackground="#c4c4c4")
        self.Spinbox1_day2.configure(selectforeground="black")
        self.Spinbox1_day2.configure(textvariable=AI_Portal_GUI_support.spinbox4)
        #self.Spinbox1_day2.configure(to="100.0")

        self.Spinbox1_month2 = Spinbox(self.Study_tab, from_=1, to=12)
        self.Spinbox1_month2.place(relx=0.43, rely=0.14, relheight=0.04
                , relwidth=0.03)
        self.Spinbox1_month2.configure(activebackground="#f9f9f9")
        self.Spinbox1_month2.configure(background="white")
        self.Spinbox1_month2.configure(buttonbackground="#d9d9d9")
        self.Spinbox1_month2.configure(disabledforeground="#a3a3a3")
        self.Spinbox1_month2.configure(foreground="black")
        #self.Spinbox1_month2.configure(from_="1.0")
        self.Spinbox1_month2.configure(highlightbackground="black")
        self.Spinbox1_month2.configure(highlightcolor="black")
        self.Spinbox1_month2.configure(insertbackground="black")
        self.Spinbox1_month2.configure(selectbackground="#c4c4c4")
        self.Spinbox1_month2.configure(selectforeground="black")
        self.Spinbox1_month2.configure(textvariable=AI_Portal_GUI_support.spinbox5)
        #self.Spinbox1_month2.configure(to="100.0")

        self.Spinbox1_year2 = Spinbox(self.Study_tab, from_=1900, to=2020)
        self.Spinbox1_year2.place(relx=0.48, rely=0.14, relheight=0.04
                , relwidth=0.06)
        self.Spinbox1_year2.configure(activebackground="#f9f9f9")
        self.Spinbox1_year2.configure(background="white")
        self.Spinbox1_year2.configure(buttonbackground="#d9d9d9")
        self.Spinbox1_year2.configure(disabledforeground="#a3a3a3")
        self.Spinbox1_year2.configure(foreground="black")
        #self.Spinbox1_year2.configure(from_="1.0")
        self.Spinbox1_year2.configure(highlightbackground="black")
        self.Spinbox1_year2.configure(highlightcolor="black")
        self.Spinbox1_year2.configure(insertbackground="black")
        self.Spinbox1_year2.configure(selectbackground="#c4c4c4")
        self.Spinbox1_year2.configure(selectforeground="black")
        self.Spinbox1_year2.configure(textvariable=AI_Portal_GUI_support.spinbox6)
        #self.Spinbox1_year2.setMinimum(1)

        #self.Spinbox1_year2.configure(to="100.0")

        self.Label2_7 = Label(self.Study_tab, anchor='w')
        self.Label2_7.place(relx=0.2, rely=0.14, height=31, width=16)
        self.Label2_7.configure(activebackground="#f9f9f9")
        self.Label2_7.configure(activeforeground="black")
        self.Label2_7.configure(background="#d9d9d9")
        self.Label2_7.configure(disabledforeground="#a3a3a3")
        self.Label2_7.configure(foreground="#000000")
        self.Label2_7.configure(highlightbackground="#d9d9d9")
        self.Label2_7.configure(highlightcolor="black")
        self.Label2_7.configure(text='''/''')
        self.Label2_7.configure(width=16)

        self.Label2_8 = Label(self.Study_tab, anchor='w')
        self.Label2_8.place(relx=0.25, rely=0.14, height=31, width=16)
        self.Label2_8.configure(activebackground="#f9f9f9")
        self.Label2_8.configure(activeforeground="black")
        self.Label2_8.configure(background="#d9d9d9")
        self.Label2_8.configure(disabledforeground="#a3a3a3")
        self.Label2_8.configure(foreground="#000000")
        self.Label2_8.configure(highlightbackground="#d9d9d9")
        self.Label2_8.configure(highlightcolor="black")
        self.Label2_8.configure(text='''/''')
        self.Label2_8.configure(width=16)

        self.Label2_8 = Label(self.Study_tab, anchor='w')
        self.Label2_8.place(relx=0.42, rely=0.14, height=31, width=16)
        self.Label2_8.configure(activebackground="#f9f9f9")
        self.Label2_8.configure(activeforeground="black")
        self.Label2_8.configure(background="#d9d9d9")
        self.Label2_8.configure(disabledforeground="#a3a3a3")
        self.Label2_8.configure(foreground="#000000")
        self.Label2_8.configure(highlightbackground="#d9d9d9")
        self.Label2_8.configure(highlightcolor="black")
        self.Label2_8.configure(text='''/''')

        self.Label2_8 = Label(self.Study_tab, anchor='w')
        self.Label2_8.place(relx=0.46, rely=0.14, height=31, width=16)
        self.Label2_8.configure(activebackground="#f9f9f9")
        self.Label2_8.configure(activeforeground="black")
        self.Label2_8.configure(background="#d9d9d9")
        self.Label2_8.configure(disabledforeground="#a3a3a3")
        self.Label2_8.configure(foreground="#000000")
        self.Label2_8.configure(highlightbackground="#d9d9d9")
        self.Label2_8.configure(highlightcolor="black")
        self.Label2_8.configure(text='''/''')

        self.Proc_search = Entry(self.Study_tab)
        self.Proc_search.place(relx=0.17, rely=0.19,height=26, relwidth=0.37)
        self.Proc_search.configure(background="white")
        self.Proc_search.configure(disabledforeground="#a3a3a3")
        self.Proc_search.configure(font="TkFixedFont")
        self.Proc_search.configure(foreground="#000000")
        self.Proc_search.configure(insertbackground="black")
        self.Proc_search.configure(width=464)

        self.Label2_8 = Label(self.Study_tab, anchor='w')
        self.Label2_8.place(relx=0.34, rely=0.14, height=31, width=16)
        self.Label2_8.configure(activebackground="#f9f9f9")
        self.Label2_8.configure(activeforeground="black")
        self.Label2_8.configure(background="#d9d9d9")
        self.Label2_8.configure(disabledforeground="#a3a3a3")
        self.Label2_8.configure(foreground="#000000")
        self.Label2_8.configure(highlightbackground="#d9d9d9")
        self.Label2_8.configure(highlightcolor="black")
        self.Label2_8.configure(text='''to''')

        self.Scrolledlistbox1 = ScrolledListBox(self.Study_tab)
        self.Scrolledlistbox1.place(relx=0.02, rely=0.25, relheight=0.72
                , relwidth=0.53)
        self.Scrolledlistbox1.configure(background="white")
        self.Scrolledlistbox1.configure(disabledforeground="#a3a3a3")
        self.Scrolledlistbox1.configure(font="TkFixedFont")
        self.Scrolledlistbox1.configure(foreground="black")
        self.Scrolledlistbox1.configure(highlightbackground="#d9d9d9")
        self.Scrolledlistbox1.configure(highlightcolor="#d9d9d9")
        self.Scrolledlistbox1.configure(selectbackground="#c4c4c4")
        self.Scrolledlistbox1.configure(selectforeground="black")
        self.Scrolledlistbox1.configure(width=10)

        self.Scrolledlistbox4 = ScrolledListBox(self.Study_tab)
        self.Scrolledlistbox4.place(relx=0.57, rely=0.14, relheight=0.83
                , relwidth=0.42)
        self.Scrolledlistbox4.configure(background="white")
        self.Scrolledlistbox4.configure(disabledforeground="#a3a3a3")
        self.Scrolledlistbox4.configure(font="TkFixedFont")
        self.Scrolledlistbox4.configure(foreground="black")
        self.Scrolledlistbox4.configure(highlightbackground="#d9d9d9")
        self.Scrolledlistbox4.configure(highlightcolor="#d9d9d9")
        self.Scrolledlistbox4.configure(selectbackground="#c4c4c4")
        self.Scrolledlistbox4.configure(selectforeground="black")
        self.Scrolledlistbox4.configure(width=10)

        self.Label6 = Label(self.Study_tab, anchor='w')
        self.Label6.place(relx=0.57, rely=0.08, height=31, width=165)
        self.Label6.configure(background="#d9d9d9")
        self.Label6.configure(disabledforeground="#a3a3a3")
        self.Label6.configure(foreground="#000000")
        self.Label6.configure(text='''Selected Procedures''')

        self.Label5 = Label(self.Diagnosis_tab, anchor='w')
        self.Label5.place(relx=0.01, rely=0.31, height=31, width=131)
        self.Label5.configure(background="#d9d9d9")
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(foreground="#000000")
        self.Label5.configure(text='''Diagnosis Search''')
        self.Label5.configure(width=131)

        self.Diag_search = Entry(self.Diagnosis_tab)
        self.Diag_search.place(relx=0.18, rely=0.31,height=26, relwidth=0.44)
        self.Diag_search.configure(background="white")
        self.Diag_search.configure(disabledforeground="#a3a3a3")
        self.Diag_search.configure(font="TkFixedFont")
        self.Diag_search.configure(foreground="#000000")
        self.Diag_search.configure(insertbackground="black")
        self.Diag_search.configure(width=544)

        self.Scrolledlistbox2 = ScrolledListBox(self.Diagnosis_tab)
        self.Scrolledlistbox2.place(relx=0.01, rely=0.38, relheight=0.59
                , relwidth=0.61)
        self.Scrolledlistbox2.configure(background="white")
        self.Scrolledlistbox2.configure(disabledforeground="#a3a3a3")
        self.Scrolledlistbox2.configure(font="TkFixedFont")
        self.Scrolledlistbox2.configure(foreground="black")
        self.Scrolledlistbox2.configure(highlightbackground="#d9d9d9")
        self.Scrolledlistbox2.configure(highlightcolor="#d9d9d9")
        self.Scrolledlistbox2.configure(selectbackground="#c4c4c4")
        self.Scrolledlistbox2.configure(selectforeground="black")
        self.Scrolledlistbox2.configure(width=10)

        self.Scrolledlistbox3 = ScrolledListBox(self.Diagnosis_tab)
        self.Scrolledlistbox3.place(relx=0.64, rely=0.15, relheight=0.8
                , relwidth=0.34)
        self.Scrolledlistbox3.configure(background="white")
        self.Scrolledlistbox3.configure(disabledforeground="#a3a3a3")
        self.Scrolledlistbox3.configure(font="TkFixedFont")
        self.Scrolledlistbox3.configure(foreground="black")
        self.Scrolledlistbox3.configure(highlightbackground="#d9d9d9")
        self.Scrolledlistbox3.configure(highlightcolor="#d9d9d9")
        self.Scrolledlistbox3.configure(selectbackground="#c4c4c4")
        self.Scrolledlistbox3.configure(selectforeground="black")
        self.Scrolledlistbox3.configure(width=10)

        self.Label5_18 = Label(self.Diagnosis_tab, anchor='w')
        self.Label5_18.place(relx=0.01, rely=0.08, height=31, width=141)
        self.Label5_18.configure(activebackground="#f9f9f9")
        self.Label5_18.configure(activeforeground="black")
        self.Label5_18.configure(background="#d9d9d9")
        self.Label5_18.configure(disabledforeground="#a3a3a3")
        self.Label5_18.configure(foreground="#000000")
        self.Label5_18.configure(highlightbackground="#d9d9d9")
        self.Label5_18.configure(highlightcolor="black")
        self.Label5_18.configure(text='''Findings Contains''')

        self.Entry4_find_cont = Entry(self.Diagnosis_tab)
        self.Entry4_find_cont.place(relx=0.18, rely=0.08,height=26, relwidth=0.44)
        self.Entry4_find_cont.configure(background="white")
        self.Entry4_find_cont.configure(disabledforeground="#a3a3a3")
        self.Entry4_find_cont.configure(font="TkFixedFont")
        self.Entry4_find_cont.configure(foreground="#000000")
        self.Entry4_find_cont.configure(insertbackground="black")
        self.Entry4_find_cont.configure(width=544)

        self.Label5_19 = Label(self.Diagnosis_tab, anchor='w')
        self.Label5_19.place(relx=0.01, rely=0.14, height=31, width=161)
        self.Label5_19.configure(activebackground="#f9f9f9")
        self.Label5_19.configure(activeforeground="black")
        self.Label5_19.configure(background="#d9d9d9")
        self.Label5_19.configure(disabledforeground="#a3a3a3")
        self.Label5_19.configure(foreground="#000000")
        self.Label5_19.configure(highlightbackground="#d9d9d9")
        self.Label5_19.configure(highlightcolor="black")
        self.Label5_19.configure(text='''Impression Contains''')
        self.Label5_19.configure(width=161)

        self.Entry4_impr_cont = Entry(self.Diagnosis_tab)
        self.Entry4_impr_cont.place(relx=0.18, rely=0.14,height=26, relwidth=0.44)
        self.Entry4_impr_cont.configure(background="white")
        self.Entry4_impr_cont.configure(disabledforeground="#a3a3a3")
        self.Entry4_impr_cont.configure(font="TkFixedFont")
        self.Entry4_impr_cont.configure(foreground="#000000")
        self.Entry4_impr_cont.configure(highlightbackground="#d9d9d9")
        self.Entry4_impr_cont.configure(highlightcolor="black")
        self.Entry4_impr_cont.configure(insertbackground="black")
        self.Entry4_impr_cont.configure(selectbackground="#c4c4c4")
        self.Entry4_impr_cont.configure(selectforeground="black")

        self.Label5_20 = Label(self.Diagnosis_tab, anchor='w')
        self.Label5_20.place(relx=0.01, rely=0.19, height=31, width=141)
        self.Label5_20.configure(activebackground="#f9f9f9")
        self.Label5_20.configure(activeforeground="black")
        self.Label5_20.configure(background="#d9d9d9")
        self.Label5_20.configure(disabledforeground="#a3a3a3")
        self.Label5_20.configure(foreground="#000000")
        self.Label5_20.configure(highlightbackground="#d9d9d9")
        self.Label5_20.configure(highlightcolor="black")
        self.Label5_20.configure(text='''Recommendation''')
        self.Label5_20.configure(width=141)

        self.TCombobox3 = ttk.Combobox(self.Diagnosis_tab)
        self.TCombobox3.place(relx=0.18, rely=0.19, relheight=0.04
                , relwidth=0.43)
        self.TCombobox3.configure(textvariable=AI_Portal_GUI_support.combobox)
        self.TCombobox3.configure(width=542)
        self.TCombobox3.configure(takefocus="")

        self.Label5_21 = Label(self.Diagnosis_tab, anchor='w')
        self.Label5_21.place(relx=0.01, rely=0.25, height=31, width=111)
        self.Label5_21.configure(activebackground="#f9f9f9")
        self.Label5_21.configure(activeforeground="black")
        self.Label5_21.configure(background="#d9d9d9")
        self.Label5_21.configure(disabledforeground="#a3a3a3")
        self.Label5_21.configure(foreground="#000000")
        self.Label5_21.configure(highlightbackground="#d9d9d9")
        self.Label5_21.configure(highlightcolor="black")
        self.Label5_21.configure(text='''Critical Results''')
        self.Label5_21.configure(width=111)

        self.style.map('TCheckbutton',background=
            [('selected', _bgcolor), ('active', _ana2color)])
        self.TCheckbutton1 = ttk.Checkbutton(self.Diagnosis_tab)
        self.TCheckbutton1.place(relx=0.18, rely=0.25, relwidth=0.09
                , relheight=0.0, height=31)
        self.TCheckbutton1.configure(variable=AI_Portal_GUI_support.tch95)
        self.TCheckbutton1.configure(takefocus="")
        self.TCheckbutton1.configure(text='''Category 1''')

        self.TCheckbutton1_22 = ttk.Checkbutton(self.Diagnosis_tab)
        self.TCheckbutton1_22.place(relx=0.28, rely=0.25, relwidth=0.09
                , relheight=0.0, height=31)
        self.TCheckbutton1_22.configure(variable=AI_Portal_GUI_support.tch95)
        self.TCheckbutton1_22.configure(takefocus="")
        self.TCheckbutton1_22.configure(text='''Category 2''')

        self.TCheckbutton1_23 = ttk.Checkbutton(self.Diagnosis_tab)
        self.TCheckbutton1_23.place(relx=0.38, rely=0.25, relwidth=0.09
                , relheight=0.0, height=31)
        self.TCheckbutton1_23.configure(variable=AI_Portal_GUI_support.tch95)
        self.TCheckbutton1_23.configure(takefocus="")
        self.TCheckbutton1_23.configure(text='''Category 3''')

        self.Label7 = Label(self.Diagnosis_tab, anchor='w')
        self.Label7.place(relx=0.64, rely=0.1, height=31, width=160)
        self.Label7.configure(background="#d9d9d9")
        self.Label7.configure(disabledforeground="#a3a3a3")
        self.Label7.configure(foreground="#000000")
        self.Label7.configure(text='''Selected Diagnoses''')

        self.Label3 = Label(self.Patient_tab, anchor='w')
        self.Label3.place(relx=0.01, rely=0.08, height=31, width=93)
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(text='''Age Range''')

        self.Label3_9 = Label(self.Patient_tab, anchor='w')
        self.Label3_9.place(relx=0.01, rely=0.14, height=31, width=93)
        self.Label3_9.configure(activebackground="#f9f9f9")
        self.Label3_9.configure(activeforeground="black")
        self.Label3_9.configure(background="#d9d9d9")
        self.Label3_9.configure(disabledforeground="#a3a3a3")
        self.Label3_9.configure(foreground="#000000")
        self.Label3_9.configure(highlightbackground="#d9d9d9")
        self.Label3_9.configure(highlightcolor="black")
        self.Label3_9.configure(text='''Patient Sex''')

        self.Label3_10 = Label(self.Patient_tab, anchor='w')
        self.Label3_10.place(relx=0.01, rely=0.19, height=31, width=133)
        self.Label3_10.configure(activebackground="#f9f9f9")
        self.Label3_10.configure(activeforeground="black")
        self.Label3_10.configure(background="#d9d9d9")
        self.Label3_10.configure(disabledforeground="#a3a3a3")
        self.Label3_10.configure(foreground="#000000")
        self.Label3_10.configure(highlightbackground="#d9d9d9")
        self.Label3_10.configure(highlightcolor="black")
        self.Label3_10.configure(text='''Smoking History''')
        self.Label3_10.configure(width=133)

        self.tNo39_t2_lab67 = Label(self.Patient_tab, anchor='w')
        self.tNo39_t2_lab67.place(relx=0.0, rely=0.0, height=1, width=1)
        self.tNo39_t2_lab67.configure(activebackground="#f9f9f9")
        self.tNo39_t2_lab67.configure(activeforeground="black")
        self.tNo39_t2_lab67.configure(background="#d9d9d9")
        self.tNo39_t2_lab67.configure(disabledforeground="#a3a3a3")
        self.tNo39_t2_lab67.configure(foreground="#00FF00")
        self.tNo39_t2_lab67.configure(highlightbackground="#d9d9d9")
        self.tNo39_t2_lab67.configure(highlightcolor="black")
        self.tNo39_t2_lab67.configure(text='''Age Range''')

        self.Label3_10 = Label(self.Patient_tab, anchor='w')
        self.Label3_10.place(relx=0.01, rely=0.25, height=31, width=113)
        self.Label3_10.configure(activebackground="#f9f9f9")
        self.Label3_10.configure(activeforeground="black")
        self.Label3_10.configure(background="#d9d9d9")
        self.Label3_10.configure(disabledforeground="#a3a3a3")
        self.Label3_10.configure(foreground="#000000")
        self.Label3_10.configure(highlightbackground="#d9d9d9")
        self.Label3_10.configure(highlightcolor="black")
        self.Label3_10.configure(text='''Ethnicity/Race''')
        self.Label3_10.configure(width=113)

        self.patient_range_year1 = Spinbox(self.Patient_tab, from_=0, to=120)
        self.patient_range_year1.place(relx=0.17, rely=0.08,relheight=.04, relwidth=0.07)
        self.patient_range_year1.configure(activebackground="#f9f9f9")
        self.patient_range_year1.configure(background="white")
        self.patient_range_year1.configure(buttonbackground="#d9d9d9")
        self.patient_range_year1.configure(disabledforeground="#a3a3a3")
        self.patient_range_year1.configure(foreground="black")
        #self.patient_range_year1.configure(from_="1.0")
        self.patient_range_year1.configure(highlightbackground="black")
        self.patient_range_year1.configure(highlightcolor="black")
        self.patient_range_year1.configure(insertbackground="black")
        self.patient_range_year1.configure(selectbackground="#c4c4c4")
        self.patient_range_year1.configure(selectforeground="black")
        self.patient_range_year1.configure(textvariable=AI_Portal_GUI_support.spinbox7)

        # self.Entry2 = Entry(self.Patient_tab)
        # self.Entry2.place(relx=0.17, rely=0.08,height=26, relwidth=0.07)
        # self.Entry2.configure(background="white")
        # self.Entry2.configure(disabledforeground="#a3a3a3")
        # self.Entry2.configure(font="TkFixedFont")
        # self.Entry2.configure(foreground="#000000")
        # self.Entry2.configure(insertbackground="black")
        # self.Entry2.configure(width=84)

        self.patient_range_year2 = Spinbox(self.Patient_tab, from_=0, to=120)
        self.patient_range_year2.place(relx=0.28, rely=0.08,relheight=.04, relwidth=0.07)
        self.patient_range_year2.configure(activebackground="#f9f9f9")
        self.patient_range_year2.configure(background="white")
        self.patient_range_year2.configure(buttonbackground="#d9d9d9")
        self.patient_range_year2.configure(disabledforeground="#a3a3a3")
        self.patient_range_year2.configure(foreground="black")
        #self.patient_range_year2.configure(from_="1.0")
        self.patient_range_year2.configure(highlightbackground="black")
        self.patient_range_year2.configure(highlightcolor="black")
        self.patient_range_year2.configure(insertbackground="black")
        self.patient_range_year2.configure(selectbackground="#c4c4c4")
        self.patient_range_year2.configure(selectforeground="black")
        self.patient_range_year2.configure(textvariable=AI_Portal_GUI_support.spinbox8)

        # self.Entry2_11 = Entry(self.Patient_tab)
        # self.Entry2_11.place(relx=0.28, rely=0.08,height=26, relwidth=0.07)
        # self.Entry2_11.configure(background="white")
        # self.Entry2_11.configure(disabledforeground="#a3a3a3")
        # self.Entry2_11.configure(font="TkFixedFont")
        # self.Entry2_11.configure(foreground="#000000")
        # self.Entry2_11.configure(highlightbackground="#d9d9d9")
        # self.Entry2_11.configure(highlightcolor="black")
        # self.Entry2_11.configure(insertbackground="black")
        # self.Entry2_11.configure(selectbackground="#c4c4c4")
        # self.Entry2_11.configure(selectforeground="black")

        self.Label4 = Label(self.Patient_tab, anchor='w')
        self.Label4.place(relx=0.24, rely=0.08, height=31, width=47)
        self.Label4.configure(background="#d9d9d9")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(text='''to''')
        self.Label4.configure(width=47)

        self.any_sex_button = Radiobutton(self.Patient_tab)
        self.any_sex_button.place(relx=0.17, rely=0.14, relheight=0.05
                , relwidth=0.05)
        self.any_sex_button.configure(activebackground="#d9d9d9")
        self.any_sex_button.configure(activeforeground="#000000")
        self.any_sex_button.configure(background="#d9d9d9")
        self.any_sex_button.configure(disabledforeground="#a3a3a3")
        self.any_sex_button.configure(foreground="#000000")
        self.any_sex_button.configure(highlightbackground="#d9d9d9")
        self.any_sex_button.configure(highlightcolor="black")
        self.any_sex_button.configure(justify=LEFT)
        self.any_sex_button.configure(text='''Any''')
        self.any_sex_button.configure(variable=AI_Portal_GUI_support.sex_select)

        self.F_sex_button = Radiobutton(self.Patient_tab)
        self.F_sex_button.place(relx=0.22, rely=0.14, relheight=0.05
                , relwidth=0.04)
        self.F_sex_button.configure(activebackground="#d9d9d9")
        self.F_sex_button.configure(activeforeground="#000000")
        self.F_sex_button.configure(background="#d9d9d9")
        self.F_sex_button.configure(disabledforeground="#a3a3a3")
        self.F_sex_button.configure(foreground="#000000")
        self.F_sex_button.configure(highlightbackground="#d9d9d9")
        self.F_sex_button.configure(highlightcolor="black")
        self.F_sex_button.configure(justify=LEFT)
        self.F_sex_button.configure(text='''F''')
        self.F_sex_button.configure(variable=AI_Portal_GUI_support.sex_select)

        self.M_sex_button = Radiobutton(self.Patient_tab)
        self.M_sex_button.place(relx=0.29, rely=0.14, relheight=0.05
                , relwidth=0.04)
        self.M_sex_button.configure(activebackground="#d9d9d9")
        self.M_sex_button.configure(activeforeground="#000000")
        self.M_sex_button.configure(background="#d9d9d9")
        self.M_sex_button.configure(disabledforeground="#a3a3a3")
        self.M_sex_button.configure(foreground="#000000")
        self.M_sex_button.configure(highlightbackground="#d9d9d9")
        self.M_sex_button.configure(highlightcolor="black")
        self.M_sex_button.configure(justify=LEFT)
        self.M_sex_button.configure(text='''M''')
        self.M_sex_button.configure(variable=AI_Portal_GUI_support.sex_select)
        self.M_sex_button.configure(width=47)

        self.other_sex_button = Radiobutton(self.Patient_tab)
        self.other_sex_button.place(relx=0.4, rely=0.14, relheight=0.05
                , relwidth=0.05)
        self.other_sex_button.configure(activebackground="#d9d9d9")
        self.other_sex_button.configure(activeforeground="#000000")
        self.other_sex_button.configure(background="#d9d9d9")
        self.other_sex_button.configure(disabledforeground="#a3a3a3")
        self.other_sex_button.configure(foreground="#000000")
        self.other_sex_button.configure(highlightbackground="#d9d9d9")
        self.other_sex_button.configure(highlightcolor="black")
        self.other_sex_button.configure(justify=LEFT)
        self.other_sex_button.configure(text='''Other''')
        self.other_sex_button.configure(variable=AI_Portal_GUI_support.sex_select)
        self.other_sex_button.configure(width=67)

        self.any_smoker_button = Radiobutton(self.Patient_tab)
        self.any_smoker_button.place(relx=0.17, rely=0.19, relheight=0.05
                , relwidth=0.05)
        self.any_smoker_button.configure(activebackground="#d9d9d9")
        self.any_smoker_button.configure(activeforeground="#000000")
        self.any_smoker_button.configure(background="#d9d9d9")
        self.any_smoker_button.configure(disabledforeground="#a3a3a3")
        self.any_smoker_button.configure(foreground="#000000")
        self.any_smoker_button.configure(highlightbackground="#d9d9d9")
        self.any_smoker_button.configure(highlightcolor="black")
        self.any_smoker_button.configure(justify=LEFT)
        self.any_smoker_button.configure(text='''Any''')

        self.current_smoker_button = Radiobutton(self.Patient_tab)
        self.current_smoker_button.place(relx=0.39, rely=0.19, relheight=0.05
                , relwidth=0.13)
        self.current_smoker_button.configure(activebackground="#d9d9d9")
        self.current_smoker_button.configure(activeforeground="#000000")
        self.current_smoker_button.configure(background="#d9d9d9")
        self.current_smoker_button.configure(disabledforeground="#a3a3a3")
        self.current_smoker_button.configure(foreground="#000000")
        self.current_smoker_button.configure(highlightbackground="#d9d9d9")
        self.current_smoker_button.configure(highlightcolor="black")
        self.current_smoker_button.configure(justify=LEFT)
        self.current_smoker_button.configure(text='''Current smoker''')
        self.current_smoker_button.configure(width=162)

        self.past_smoker_button = Radiobutton(self.Patient_tab)
        self.past_smoker_button.place(relx=0.29, rely=0.19, relheight=0.05
                , relwidth=0.11)
        self.past_smoker_button.configure(activebackground="#d9d9d9")
        self.past_smoker_button.configure(activeforeground="#000000")
        self.past_smoker_button.configure(background="#d9d9d9")
        self.past_smoker_button.configure(disabledforeground="#a3a3a3")
        self.past_smoker_button.configure(foreground="#000000")
        self.past_smoker_button.configure(highlightbackground="#d9d9d9")
        self.past_smoker_button.configure(highlightcolor="black")
        self.past_smoker_button.configure(justify=LEFT)
        self.past_smoker_button.configure(text='''Past smoker''')
        self.past_smoker_button.configure(width=132)

        self.never_smoker_button = Radiobutton(self.Patient_tab)
        self.never_smoker_button.place(relx=0.22, rely=0.19, relheight=0.05
                , relwidth=0.07)
        self.never_smoker_button.configure(activebackground="#d9d9d9")
        self.never_smoker_button.configure(activeforeground="#000000")
        self.never_smoker_button.configure(background="#d9d9d9")
        self.never_smoker_button.configure(disabledforeground="#a3a3a3")
        self.never_smoker_button.configure(foreground="#000000")
        self.never_smoker_button.configure(highlightbackground="#d9d9d9")
        self.never_smoker_button.configure(highlightcolor="black")
        self.never_smoker_button.configure(justify=LEFT)
        self.never_smoker_button.configure(text='''Never''')
        self.never_smoker_button.configure(width=82)

        self.Patient_condition_box = ttk.Combobox(self.Patient_tab)
        self.Patient_condition_box.place(relx=0.17, rely=0.25, relheight=0.04
                , relwidth=0.35)
        self.Patient_condition_box.configure(textvariable=AI_Portal_GUI_support.combobox)
        self.Patient_condition_box.configure(width=432)
        self.Patient_condition_box.configure(takefocus="")

        self.Label1 = Label(self.Dataset_tab, anchor='w')
        self.Label1.place(relx=0.02, rely=0.07, height=31, width=274)
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(text='''Max number of studies to retrieve''')

        self.Label8 = Label(self.Dataset_tab, anchor='w')
        self.Label8.place(relx=0.02, rely=0.13, height=31, width=189)
        self.Label8.configure(background="#d9d9d9")
        self.Label8.configure(disabledforeground="#a3a3a3")
        self.Label8.configure(foreground="#000000")
        self.Label8.configure(text='''Source to retrieve from''')

        self.Label8_24 = Label(self.Dataset_tab, anchor='w')
        self.Label8_24.place(relx=0.02, rely=0.18, height=31, width=99)
        self.Label8_24.configure(activebackground="#f9f9f9")
        self.Label8_24.configure(activeforeground="black")
        self.Label8_24.configure(background="#d9d9d9")
        self.Label8_24.configure(disabledforeground="#a3a3a3")
        self.Label8_24.configure(foreground="#000000")
        self.Label8_24.configure(highlightbackground="#d9d9d9")
        self.Label8_24.configure(highlightcolor="black")
        self.Label8_24.configure(text='''Get reports?''')
        self.Label8_24.configure(width=99)

        self.Label8_25 = Label(self.Dataset_tab, anchor='w')
        self.Label8_25.place(relx=0.02, rely=0.24, height=31, width=279)
        self.Label8_25.configure(activebackground="#f9f9f9")
        self.Label8_25.configure(activeforeground="black")
        self.Label8_25.configure(background="#d9d9d9")
        self.Label8_25.configure(disabledforeground="#a3a3a3")
        self.Label8_25.configure(foreground="#000000")
        self.Label8_25.configure(highlightbackground="#d9d9d9")
        self.Label8_25.configure(highlightcolor="black")
        self.Label8_25.configure(text='''Only get studies that have reports?''')
        self.Label8_25.configure(width=279)

        self.Label8_26 = Label(self.Dataset_tab, anchor='w')
        self.Label8_26.place(relx=0.02, rely=0.29, height=31, width=409)
        self.Label8_26.configure(activebackground="#f9f9f9")
        self.Label8_26.configure(activeforeground="black")
        self.Label8_26.configure(background="#d9d9d9")
        self.Label8_26.configure(disabledforeground="#a3a3a3")
        self.Label8_26.configure(foreground="#000000")
        self.Label8_26.configure(highlightbackground="#d9d9d9")
        self.Label8_26.configure(highlightcolor="black")
        self.Label8_26.configure(text='''Create research PID to maintain PID link to patient?''')
        self.Label8_26.configure(width=409)

        self.Retrieve_src = Entry(self.Dataset_tab)
        self.Retrieve_src.place(relx=0.38, rely=0.13,height=26, relwidth=0.2)
        self.Retrieve_src.configure(background="white")
        self.Retrieve_src.configure(disabledforeground="#a3a3a3")
        self.Retrieve_src.configure(font="TkFixedFont")
        self.Retrieve_src.configure(foreground="#000000")
        self.Retrieve_src.configure(insertbackground="black")

        self.Spinbox2 = Spinbox(self.Dataset_tab, from_=1.0, to=100.0)
        self.Spinbox2.place(relx=0.38, rely=0.07, relheight=0.04, relwidth=0.2)
        self.Spinbox2.configure(activebackground="#f9f9f9")
        self.Spinbox2.configure(background="white")
        self.Spinbox2.configure(buttonbackground="#d9d9d9")
        self.Spinbox2.configure(disabledforeground="#a3a3a3")
        self.Spinbox2.configure(foreground="black")
        self.Spinbox2.configure(from_="1.0")
        self.Spinbox2.configure(highlightbackground="black")
        self.Spinbox2.configure(highlightcolor="black")
        self.Spinbox2.configure(insertbackground="black")
        self.Spinbox2.configure(selectbackground="#c4c4c4")
        self.Spinbox2.configure(selectforeground="black")
        self.Spinbox2.configure(textvariable=AI_Portal_GUI_support.spinbox)
        self.Spinbox2.configure(to="100.0")
        self.Spinbox2.configure(width=248)

        self.Radiobutton3 = Radiobutton(self.Dataset_tab)
        self.Radiobutton3.place(relx=0.38, rely=0.17, relheight=0.05
                , relwidth=0.05)
        self.Radiobutton3.configure(activebackground="#d9d9d9")
        self.Radiobutton3.configure(activeforeground="#000000")
        self.Radiobutton3.configure(background="#d9d9d9")
        self.Radiobutton3.configure(disabledforeground="#a3a3a3")
        self.Radiobutton3.configure(foreground="#000000")
        self.Radiobutton3.configure(highlightbackground="#d9d9d9")
        self.Radiobutton3.configure(highlightcolor="black")
        self.Radiobutton3.configure(justify=LEFT)
        self.Radiobutton3.configure(text='''Yes''')
        self.Radiobutton3.configure(variable=AI_Portal_GUI_support.get_reports)

        self.Radiobutton3_27 = Radiobutton(self.Dataset_tab)
        self.Radiobutton3_27.place(relx=0.44, rely=0.17, relheight=0.05
                , relwidth=0.05)
        self.Radiobutton3_27.configure(activebackground="#d9d9d9")
        self.Radiobutton3_27.configure(activeforeground="#000000")
        self.Radiobutton3_27.configure(background="#d9d9d9")
        self.Radiobutton3_27.configure(disabledforeground="#a3a3a3")
        self.Radiobutton3_27.configure(foreground="#000000")
        self.Radiobutton3_27.configure(highlightbackground="#d9d9d9")
        self.Radiobutton3_27.configure(highlightcolor="black")
        self.Radiobutton3_27.configure(justify=LEFT)
        self.Radiobutton3_27.configure(text='''No''')
        self.Radiobutton3_27.configure(variable=AI_Portal_GUI_support.get_reports)

        self.Radiobutton3_28 = Radiobutton(self.Dataset_tab)
        self.Radiobutton3_28.place(relx=0.38, rely=0.22, relheight=0.05
                , relwidth=0.05)
        self.Radiobutton3_28.configure(activebackground="#d9d9d9")
        self.Radiobutton3_28.configure(activeforeground="#000000")
        self.Radiobutton3_28.configure(background="#d9d9d9")
        self.Radiobutton3_28.configure(disabledforeground="#a3a3a3")
        self.Radiobutton3_28.configure(foreground="#000000")
        self.Radiobutton3_28.configure(highlightbackground="#d9d9d9")
        self.Radiobutton3_28.configure(highlightcolor="black")
        self.Radiobutton3_28.configure(justify=LEFT)
        self.Radiobutton3_28.configure(text='''Yes''')
        self.Radiobutton3_28.configure(variable=AI_Portal_GUI_support.get_only_reports)

        self.Radiobutton3_28 = Radiobutton(self.Dataset_tab)
        self.Radiobutton3_28.place(relx=0.44, rely=0.22, relheight=0.05
                , relwidth=0.05)
        self.Radiobutton3_28.configure(activebackground="#d9d9d9")
        self.Radiobutton3_28.configure(activeforeground="#000000")
        self.Radiobutton3_28.configure(background="#d9d9d9")
        self.Radiobutton3_28.configure(disabledforeground="#a3a3a3")
        self.Radiobutton3_28.configure(foreground="#000000")
        self.Radiobutton3_28.configure(highlightbackground="#d9d9d9")
        self.Radiobutton3_28.configure(highlightcolor="black")
        self.Radiobutton3_28.configure(justify=LEFT)
        self.Radiobutton3_28.configure(text='''No''')
        self.Radiobutton3_28.configure(variable=AI_Portal_GUI_support.get_only_reports)

        self.Radiobutton3_29 = Radiobutton(self.Dataset_tab)
        self.Radiobutton3_29.place(relx=0.38, rely=0.28, relheight=0.05
                , relwidth=0.05)
        self.Radiobutton3_29.configure(activebackground="#d9d9d9")
        self.Radiobutton3_29.configure(activeforeground="#000000")
        self.Radiobutton3_29.configure(background="#d9d9d9")
        self.Radiobutton3_29.configure(disabledforeground="#a3a3a3")
        self.Radiobutton3_29.configure(foreground="#000000")
        self.Radiobutton3_29.configure(highlightbackground="#d9d9d9")
        self.Radiobutton3_29.configure(highlightcolor="black")
        self.Radiobutton3_29.configure(justify=LEFT)
        self.Radiobutton3_29.configure(text='''Yes''')
        self.Radiobutton3_29.configure(variable=AI_Portal_GUI_support.research_PID)

        self.Radiobutton3_30 = Radiobutton(self.Dataset_tab)
        self.Radiobutton3_30.place(relx=0.44, rely=0.28, relheight=0.05
                , relwidth=0.05)
        self.Radiobutton3_30.configure(activebackground="#d9d9d9")
        self.Radiobutton3_30.configure(activeforeground="#000000")
        self.Radiobutton3_30.configure(background="#d9d9d9")
        self.Radiobutton3_30.configure(disabledforeground="#a3a3a3")
        self.Radiobutton3_30.configure(foreground="#000000")
        self.Radiobutton3_30.configure(highlightbackground="#d9d9d9")
        self.Radiobutton3_30.configure(highlightcolor="black")
        self.Radiobutton3_30.configure(justify=LEFT)
        self.Radiobutton3_30.configure(text='''No''')
        self.Radiobutton3_30.configure(variable=AI_Portal_GUI_support.research_PID)

    def validate_month(ch):
        print(ch)


# The following code is added to facilitate the Scrolled widgets you specified.
class AutoScroll(object):
    '''Configure the scrollbars for a widget.'''

    def __init__(self, master):
        #  Rozen. Added the try-except clauses so that this class
        #  could be used for scrolled entry widget for which vertical
        #  scrolling is not supported. 5/7/14.
        try:
            vsb = ttk.Scrollbar(master, orient='vertical', command=self.yview)
        except:
            pass
        hsb = ttk.Scrollbar(master, orient='horizontal', command=self.xview)

        #self.configure(yscrollcommand=_autoscroll(vsb),
        #    xscrollcommand=_autoscroll(hsb))
        try:
            self.configure(yscrollcommand=self._autoscroll(vsb))
        except:
            pass
        self.configure(xscrollcommand=self._autoscroll(hsb))

        self.grid(column=0, row=0, sticky='nsew')
        try:
            vsb.grid(column=1, row=0, sticky='ns')
        except:
            pass
        hsb.grid(column=0, row=1, sticky='ew')

        master.grid_columnconfigure(0, weight=1)
        master.grid_rowconfigure(0, weight=1)

        # Copy geometry methods of master  (taken from ScrolledText.py)
        if py3:
            methods = Pack.__dict__.keys() | Grid.__dict__.keys() \
                  | Place.__dict__.keys()
        else:
            methods = Pack.__dict__.keys() + Grid.__dict__.keys() \
                  + Place.__dict__.keys()

        for meth in methods:
            if meth[0] != '_' and meth not in ('config', 'configure'):
                setattr(self, meth, getattr(master, meth))

    @staticmethod
    def _autoscroll(sbar):
        '''Hide and show scrollbar as needed.'''
        def wrapped(first, last):
            first, last = float(first), float(last)
            if first <= 0 and last >= 1:
                sbar.grid_remove()
            else:
                sbar.grid()
            sbar.set(first, last)
        return wrapped

    def __str__(self):
        return str(self.master)

def _create_container(func):
    '''Creates a ttk Frame with a given master, and use this new frame to
    place the scrollbars and the widget.'''
    def wrapped(cls, master, **kw):
        container = ttk.Frame(master)
        return func(cls, container, **kw)
    return wrapped

class ScrolledListBox(AutoScroll, Listbox):
    '''A standard Tkinter Text widget with scrollbars that will
    automatically show/hide as needed.'''
    @_create_container
    def __init__(self, master, **kw):
        Listbox.__init__(self, master, **kw)
        AutoScroll.__init__(self, master)

if __name__ == '__main__':
    vp_start_gui()



